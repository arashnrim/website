<section id="wall" class="container">
  <p>
    Iâ€™m a student learning information technology at a polytechnic in Singapore.
    I love playing around with code and <span id="wall__errors"
      >raging at random or obscure errors</span
    >. When I'm not coding, I'm probably resting somehow or enjoying the moment
    with friends and family.
  </p>
  <p>
    I can go on and on about my passion for tech, but tl;dr, I've been
    interested in tech since young. My coding journey only really began in 2019
    (<span id="wall__time">a few</span> years ago!) when I was introduced to programming
    with an Arduino. I'm currently exploring front-end development in greater detail,
    exploring frameworks, tools, and libraries as I go.
  </p>
  <p>
    Something new I want to try is exploring the community behind code. I hope
    to pay things forward with what little I've learnt, and it's definitely a
    work in progress. I'm slowly making steps: I recently helped organise
    workshops for <a
      href="https://epoch.hackclub.com"
      target="_blank"
      rel="noopener noreferrer"
      >a 42-hour hackathon for teenagers in New Delhi</a
    >, and also <a
      href="https://blog.arashnrim.me"
      target="_blank"
      rel="noopener noreferrer">blog</a
    > from time to time; I still have a long way to go!
  </p>

  <figure>
    <code class="sprinkle" style="--rotate: -15deg">
      Compilation error (line 8, col 12): ; expected
    </code>
    <code class="sprinkle" style="--rotate: 5deg">
      Access to fetch at '???' from origin 'https://arashnrim.me' has been
      blocked by CORS policy
    </code>
    <code class="sprinkle" style="--rotate: 0deg">
      Uncaught TypeError: Cannot read property 'foo' of undefined at
      anonymous:1:5
    </code>
    <code class="sprinkle" style="--rotate: -10deg">
      Stack overflow.<br />
      Repeat 24077 times:
    </code>
  </figure>
</section>

<script>
  const wall__time = document.getElementById("wall__time");
  setInterval(() => {
    const time = new Date().valueOf() - new Date("02/01/2019").valueOf();
    const years = time / 31536000000;
    wall__time.textContent = "~" + years.toFixed(8);
  }, 100);

  const wall__errors = document.getElementById("wall__errors");
  const text = document.getElementById("wall").querySelectorAll("p");
  const sprinkles = document
    .getElementById("wall")
    .querySelectorAll(".sprinkle");
  wall__errors.addEventListener("mouseenter", () => {
    text.forEach((p) => {
      p.style.opacity = "0.1";
    });
    sprinkles.forEach((s) => {
      (s as HTMLElement).style.opacity = "1";
    });
  });
  wall__errors.addEventListener("mouseleave", () => {
    text.forEach((p) => {
      p.removeAttribute("style");
    });
    sprinkles.forEach((s) => {
      (s as HTMLElement).style.opacity = "0.15";
    });
  });
  wall__errors.addEventListener("touchleave", () => {
    text.forEach((p) => {
      p.removeAttribute("style");
    });
    sprinkles.forEach((s) => {
      (s as HTMLElement).removeAttribute("style");
    });
  });
</script>

<style>
  #wall > p {
    transition: opacity 0.2s ease;
  }

  #wall__errors {
    text-decoration: 1.75px dotted underline red;
    cursor: help;
  }

  figure {
    display: none;
  }

  figure > code {
    transition: opacity 0.2s ease;
  }

  figure > code:nth-child(1) {
    top: 5vh;
    right: 5vw;
    max-width: 27.5vmin;
  }

  figure > code:nth-child(2) {
    top: 35vh;
    left: 10vw;
    max-width: 50vmin;
    font-size: 1.25rem;
  }

  figure > code:nth-child(3) {
    top: 26vh;
    right: 20vw;
    max-width: 30vmin;
    font-size: 1rem;
  }

  figure > code:nth-child(4) {
    top: 40vh;
    right: 7.5vw;
    max-width: 25vmin;
    font-size: 1.25rem;
  }

  @media only screen and (min-width: 768px) {
    figure {
      display: block;
    }
  }

  @media only screen and (min-width: 1440px) {
    figure > code:nth-child(3) {
      right: 32.5vw;
    }
  }

  @media (prefers-reduced-motion: reduce) {
    #wall > p {
      transition: none;
    }

    figure > code {
      transition: none;
    }
  }
</style>
