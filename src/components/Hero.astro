---
import images from "../../data/images";
import { Image } from "astro:assets";
---

<section id="hero">
  <div id="hero__gallery">
    <div id="hero__gallery-text">
      <span>Scroll right for more pictures! â†’</span>
      <span>Hover over them, too!</span>
    </div>
    {
      images.map((image, index) => (
        <Image
          src={image.src}
          alt={image.alt}
          height={360}
          loading={index > 1 ? "lazy" : "eager"}
          format={"webp"}
          style={{ "--animation-order": index }}
          draggable={"false"}
        />
      ))
    }
  </div>

  <div id="hero__text">
    <span>Hey! I'm Arash.</span>
    <h2>
      I'm learning to create designed, intuitive, and practical products using
      technology.
    </h2>

    <a id="hero__cta" href="#connect">ðŸ‘‹ Say hi</a>
  </div>
</section>

<script>
  import images from "../../data/images";

  const imageElements = document.querySelectorAll("#hero__gallery > img");
  const missionElement = document.querySelector("#hero__text > h2");

  const supportsHover = window.matchMedia("(hover: hover)").matches;
  const eventStart = supportsHover ? "mouseenter" : "click";
  let timeout: number;
  let activeElement: HTMLElement | null = null;

  // Waits for the DOM to be fully loaded before adding the animation to the images
  document.onreadystatechange = () => {
    if (document.readyState === "complete") {
      imageElements.forEach((imageElement) => {
        (imageElement as HTMLImageElement).style.opacity = "1";
        (imageElement as HTMLImageElement).style.animation =
          `1.25s ease-out calc(var(--animation-order) * 200ms) 1 present`;
        (imageElement as HTMLImageElement).style.animationFillMode =
          "backwards";
      });
    }
  };

  // Replaces the text in the second span element in #hero__gallery-text on non-hover devices
  var detailsDuration = 3000;
  if (!supportsHover) {
    (
      document.querySelector(
        "#hero__gallery-text > span:last-child"
      ) as HTMLElement
    ).textContent = "Tap on them, too!";
    detailsDuration = 4000;
  }

  imageElements.forEach((imageElement, index) => {
    imageElement.addEventListener(eventStart, () => {
      if (missionElement === null) return;
      if (timeout) clearTimeout(timeout);
      timeout = setTimeout(() => {
        missionElement.textContent =
          "I'm learning to create designed, intuitive, and practical products using technology.";
        imageElements.forEach((imageElement) => {
          (imageElement as HTMLElement).style.filter =
            "grayScale(100%) brightness(50%)";
        });
      }, detailsDuration);

      if (activeElement) {
        (activeElement as HTMLElement).style.filter =
          "grayScale(100%) brightness(50%)";
      }

      missionElement.innerHTML = images[index].text;
      (imageElement as HTMLElement).style.filter =
        "grayScale(0%) brightness(100%)";

      activeElement = imageElement as HTMLElement;
    });
  });

  const greetings = ["Hey!", "Hello!", "Hi there,", "Hiya,", "Selamat datang!"];
  setInterval(() => {
    const greetingElement = document.querySelector("#hero__text > span");
    if (greetingElement === null) return;

    const randomGreeting =
      greetings[Math.floor(Math.random() * greetings.length)];
    greetingElement.textContent = randomGreeting + " I'm Arash.";
  }, 10000);
</script>

<style>
  @keyframes present {
    0% {
      opacity: 0;
      transform: translateY(25px);
    }
    100% {
      opacity: 1;
    }
  }

  #hero {
    position: relative;
    min-height: 100vh;
    overflow-x: scroll;
    display: flex;
    background:
      radial-gradient(#1f1f1f, 2.5px, transparent 3px) 0 0 / 50px 50px,
      linear-gradient(to bottom, #0a0a0a, transparent 500%);
  }

  #hero__gallery {
    display: flex;
    position: absolute;
    background-color: #0a0a0a;
  }

  #hero__gallery-text {
    opacity: 0.4;
    width: fit-content;
    position: absolute;
    margin-top: 0.5em;
    margin-left: 0.5em;
    z-index: 1;
  }

  #hero__gallery-text > span {
    display: block;
  }

  #hero__gallery > img {
    height: 360px;
    filter: grayscale(100%) brightness(50%);
    transition:
      filter 0.2s ease-out,
      opacity 0.2s ease-out,
      border-radius 0.2s ease-out;
    opacity: 0;
  }

  #hero__text {
    position: sticky;
    align-self: flex-end;
    left: calc(var(--section-padding) - 2em);
    margin: calc(var(--section-padding) - 2em);
    padding: 2em;
    background: linear-gradient(
      180deg,
      rgba(10, 10, 10, 0.5) 0%,
      rgba(10, 10, 10, 1) 75%
    );
    border-radius: var(--radius);
    animation: 0.75s ease 0s 1 present;
    background-color: #0a0a0a;
    border: 3px solid #1f1f1f;
  }

  #hero__text > span {
    font-size: var(--subtitle);
  }

  #hero__text > h2 {
    font-size: var(--title);
    font-weight: 600;
    margin: 0;
  }

  #hero__cta {
    display: block;
    width: fit-content;
    margin-top: 1em !important;
    padding: 0.25em 0.75em;
    font-size: var(--subtitle);
    background-color: transparent;
    border: 3px solid #1f1f1f;
    border-radius: 0.3em;
    transition: background-color 0.2s ease-out;
  }

  #hero__cta:hover {
    background-color: #0f0f0f;
  }

  @media only screen and (min-width: 960px) {
    #hero__text {
      max-width: 65%;
    }
  }

  @media only screen and (min-width: 1024px) {
    #hero__text {
      left: calc(var(--section-padding) / 2 - 2em);
      margin: calc(var(--section-padding) / 2 - 2em);
    }
  }
</style>
