<section id="preface" class="container">
  <div>
    <p>
      I'm a student + developer from Singapore learning to make things with
      code. Having an interest since young, I now study information technology
      at a polytechnic, embark on interesting personal projects (when I have the
      time), and <span id="preface__errors"
        >rage at random and obscure errors</span
      > from time to time.
    </p>
    <p>
      For as long as I can remember, tech has always been my kind of thing. As I
      grew acquainted with it, I remain enthusiastic in seeing how I can benefit
      from and continue to develop it. I've been at this since 2019 (<code
        id="preface__time">a few</code
      > years ago!), and I've since explored new domains of programming ever since
      at my own pace. Right now, front-end development, CLI tools, mobile app development,
      and a bit of UI and UX seem to be my kind of jam.
    </p>
    <p>
      I'm a firm believer in the community behind code, and I'm trying my best
      to learn something different and new every day. I've run special interest
      groups at school, helped planned workshops across the world, and
      documented some parts of my journey publically. With what tech and the
      people behind it can offer, there are many more exciting things to come
      too!
    </p>
    <p>
      I'm excited to get to know new people. Once you've gotten to know me a
      little better here, feel free to reach out if you'd like to say hi!
    </p>

    <figure>
      <code class="sprinkle" style="--rotate: -15deg">
        Compilation error (line 8, col 12): ; expected
      </code>
      <code class="sprinkle" style="--rotate: 5deg">
        Access to fetch at '???' from origin 'https://arashnrim.me' has been
        blocked by CORS policy
      </code>
      <code class="sprinkle" style="--rotate: 0deg">
        Uncaught TypeError: Cannot read property 'foo' of undefined at
        anonymous:1:5
      </code>
      <code class="sprinkle" style="--rotate: -10deg">
        Stack overflow.<br />
        Repeat 24077 times:
      </code>
    </figure>
  </div>
</section>

<script>
  const preface__time = document.getElementById("preface__time");
  setInterval(() => {
    const time = new Date().valueOf() - new Date("02/01/2019").valueOf();
    const years = time / 31536000000;
    preface__time!.textContent = "~" + years.toFixed(8);
  }, 100);

  const preface__errors = document.getElementById("preface__errors");
  const text = document.getElementById("preface")!.querySelectorAll("p");
  const sprinkles = document
    .getElementById("preface")!
    .querySelectorAll(".sprinkle");
  preface__errors!.addEventListener("mouseenter", () => {
    text.forEach((p) => {
      p.style.opacity = "0.1";
    });
    sprinkles.forEach((s) => {
      (s as HTMLElement).style.opacity = "1";
    });
  });
  preface__errors!.addEventListener("mouseleave", () => {
    text.forEach((p) => {
      p.removeAttribute("style");
    });
    sprinkles.forEach((s) => {
      (s as HTMLElement).style.opacity = "0.15";
    });
  });
  preface__errors!.addEventListener("touchleave", () => {
    text.forEach((p) => {
      p.removeAttribute("style");
    });
    sprinkles.forEach((s) => {
      (s as HTMLElement).removeAttribute("style");
    });
  });

  // Sprinkles around the code blocks and only when they're in view for performance
  const observer = new IntersectionObserver((entries) => {
    entries.forEach((entry) => {
      if (entry.isIntersecting) {
        sprinkles.forEach((s) => {
          (s as HTMLElement).style.animationPlayState = "running";
        });
      } else {
        sprinkles.forEach((s) => {
          (s as HTMLElement).style.animationPlayState = "paused";
        });
      }
    });
  });
  observer.observe(document.getElementById("preface")!);
</script>

<style>
  #preface {
    min-height: 75vh;
    display: flex;
  }

  #preface > div {
    margin: auto;
  }

  #preface > div > p {
    transition: opacity 0.2s ease;
  }

  #preface__errors {
    text-decoration: 1.75px dotted underline red;
    cursor: help;
  }

  figure {
    display: none;
  }

  figure > code {
    transition: opacity 0.2s ease;
  }

  figure > code:nth-child(1) {
    top: 5vh;
    right: 5vw;
    max-width: 27.5vmin;
  }

  figure > code:nth-child(2) {
    top: 35vh;
    left: 10vw;
    max-width: 50vmin;
    font-size: 1.25rem;
  }

  figure > code:nth-child(3) {
    top: 26vh;
    right: 20vw;
    max-width: 30vmin;
    font-size: 1rem;
  }

  figure > code:nth-child(4) {
    top: 40vh;
    right: 7.5vw;
    max-width: 25vmin;
    font-size: 1.25rem;
  }

  @media only screen and (min-width: 768px) {
    figure {
      display: block;
    }
  }

  @media only screen and (min-width: 1440px) {
    figure > code:nth-child(3) {
      right: 32.5vw;
    }
  }

  @media (prefers-reduced-motion: reduce) {
    #preface > p {
      transition: none;
    }

    figure > code {
      transition: none;
    }
  }
</style>
